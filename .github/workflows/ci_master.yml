name: 💫 CI

on:
  push:
    branches: [master]

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_env:
    name: ⚙️ Setup environment
    runs-on: ubuntu-20.04
    steps:
      - name: Add SHORT_SHA env property
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA::7}`" >> $GITHUB_ENV

      - name: Put commit msg in environment
        run: echo "COMMIT_MSG=${{ github.event.head_commit.message }}" >> $GITHUB_ENV

      - name: Escape commit message
        run: |
          echo "COMMIT_MSG=$(echo $COMMIT_MSG | tr -d \'\\\")" >> $GITHUB_ENV

    outputs:
      short_sha: ${{ env.SHORT_SHA }}
      commit_msg: updated code
      branch_name: master

  test:
    name: ☔️ Tests
    runs-on: ubuntu-20.04
    needs: setup_env

    # Setup postgres service for tests
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: testing
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Go with cache
        uses: actions/setup-go@v3
        with:
          go-version-file: ./go.work
          cache-dependency-path: |
            **/go.sum

      - name: Run Tests
        env:
          GITHUB_ACTIONS: true
          POSTGRES_DB: testing
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
        run: |
          go test -v -parallel 1 ./cron/...
          go test -v -parallel 1 ./database/...
          go test -v -parallel 1 ./log/...
          go test -v -parallel 1 ./server/...
          go test -v -parallel 1 ./shared/...
          go test -v -parallel 1 ./utils/...
          go test -v -parallel 1 ./uploadapi/...

