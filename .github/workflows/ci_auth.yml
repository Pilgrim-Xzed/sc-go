name: 💫 CI (Auth API)

on:
  push:
    branches: [master]
    paths: ["auth/**", "k8s/auth/**"]

concurrency:
  group: environment-auth-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_env:
    name: ⚙️ Setup environment
    runs-on: ubuntu-20.04
    steps:
      - name: Add SHORT_SHA env property
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA::7}`" >> $GITHUB_ENV

      - name: Put commit msg in environment
        run: echo "COMMIT_MSG=${{ github.event.head_commit.message }}" >> $GITHUB_ENV

      - name: Escape commit message
        run: |
          echo "COMMIT_MSG=$(echo $COMMIT_MSG | tr -d \'\\\")" >> $GITHUB_ENV

    outputs:
      short_sha: ${{ env.SHORT_SHA }}
      commit_msg: updated code
      branch_name: master

  build:
    name: 🔨 Build Binaries and Docker Image
    runs-on: ubuntu-20.04
    needs: setup_env

    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Set build start in env variable
        run: echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV

      - name: Setup Go with cache
        uses: actions/setup-go@v3
        with:
          go-version-file: ./go.work
          cache-dependency-path: |
            **/go.sum

      - name: Build GO auth API Binary
        run: |
          cd auth && go build -ldflags "-s -w -X main.Version=${{ needs.setup_env.outputs.short_sha }}" -o authapi && cd ..

      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: scogxx.azurecr.io
          username: scogxx
          password: g0OR5QbgcdhfOsxRgIttxQOKaRFf3NdXSrP6GslJfE+ACRDZBqbu

      - name: Build and push image
        if: success()
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          file: ./Dockerfile.auth
          tags: scogxx.azurecr.io/sc-auth:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}

      

  deploy_prod:
    name: 🚀 Deploy Auth API (PROD)
    runs-on: ubuntu-20.04
    needs:
      - setup_env
      - build
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        uses: ./.github/actions/k8s-deploy-aks
        with:
          image: stablecog/sc-auth:${{ needs.setup_env.outputs.branch_name}}-${{ env.GITHUB_RUN_ID }}
          embed-title: ""
          kube_config: ${{ secrets.KUBECONFIG }}
          env: auth
